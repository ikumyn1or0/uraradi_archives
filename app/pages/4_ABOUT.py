import streamlit as st
import pandas as pd

# load dataset

# set page config

st.set_page_config(page_title="裏ラジアーカイブス", page_icon="🦉")

# describe page contents

st.title("📻裏ラジアーカイブス🦉")

st.header("詳細情報")

st.subheader("裏ラジオウルナイトについて")

md_text1 = """
- 概ね金曜日25:00からYouTubeで放送中の深夜ラジオ。
- パーソナリティは774.inc所属VTuberの大浦るかこ。
- たまにゲストを呼んでおり、同じVTuberである湖南みあ・緋笠トモシカなどの他、ハヤシ・まだら牛(配信者)、藍月なくる(歌手)などが出演したことがある。
- 放送時間は概ね２時間弱。
- コーナーとして、各放送のタイトルにも用いられている「今週のメールテーマ」や、「巷のおもしれー女」「勝手にメールテーマ」などの複数週にわたって募集されるメールテーマ、それらのテーマに入らなかったお便りが分類される「ふつおた」がある。
- 内容としては、さまざまなジャンルの教養が身に付くものからR-18の話題まで多岐にわたる。
- 公式の切り抜き動画としては、[深夜ラジオ総集編#01～#50](https://youtu.be/CdQnrusbXjs)がアップされている。
"""
st.markdown(md_text1)

st.subheader("VTuber大浦るかこについて")

md_text2 = """
- 作成中……（というかこのページをわざわざ見に来ている人に改めて説明することなんて無いです。）
"""
st.markdown(md_text2)

st.subheader("Whisperについて")

md_text3 = """
- 人工知能を研究するアメリカの非営利団体[OpenAI](https://openai.com/)が2022年9月に公開した音声認識システム。
- Web上から収集した68万時間分のデータを学習に用いており、音声を入力とする以下のようなタスクに対応することができる。
  - 英語の発話の書き起こし
  - 非英語での発話の書き起こし
  - 非英語での発話から英語への翻訳
- Whisperの発表時点で、他のオープンソースモデルと比較して様々なタスクにおいて同じくらいか高精度の評価結果を残した（らしい）。
- モデルの大きさ(≒脳みその大きさ)が異なる5つのモデルが提供されている。
"""
st.markdown(md_text3)

st.subheader("このサイトについて")

md_text4 = """
- #65「いまどこにいるの、AI」回を受けて、最新のAIを使って何かしら作りたいと思い、作成しました。
- Whisperを使った今回のサイト作成を通して、現在のAIができることできないことの現在地について個人的に理解が深まってよかったと思います。
- WhisperというAIを使ってみての感想は以下の通りです。
  - 使いやすい点
    - 精度が良い点: まだ完璧とは言いませんが、かなりの精度が出ているなと思います。誤っている箇所も発音は正しいが単語を間違えているケースなどがあり、音声の認識としてはかなり正確に聞き取れていることがわかります。
    - 再生時間が取得できる点: このサイトを作成するうえで、文字起こしの結果を実際のYouTubeの再生箇所と照らし合わせて確認できるといいなと思っていたので、文字起こししたテキストが何秒の時点で発話されたものか取得できるのは有り難いと思います。
  - 使いづらい点
    - 語彙の追加に膨大なコストがかかる点: 今回の書き起こしでは人名や固有名詞の正しい表記ができていないケースが多く、これらを新たに覚えさせるには、発話データと文字情報のペアが必要です。新たな単語が追加される度に１ユーザーがこれを行うことは難しいでしょう。
    - 学習時間が長い点: 今回は一番大きいモデルを利用しましたが、ラジオ１回分(２時間弱)の書き起こしを行うのに30分程度かかります(google colab & GPU環境)。時間やGPUの計算リソースがある程度必要となり、気軽に誰でも文字起こしを使えるものにはなっていないでしょう。
    - BGMの影響を除去しきれていない点: 書き起こしテキストを見ると、明らかな誤認識を行っているケースが散見されます。これらは冒頭のBPM部分などに多く見られ、BGMの影響が認識するうえでのノイズとして出てしまっていることが予想されます。
- こちらのサイトは
"""
st.markdown(md_text4)

